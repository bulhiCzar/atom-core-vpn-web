var f=Object.defineProperty;var g=(c,e,t)=>e in c?f(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var s=(c,e,t)=>(g(c,typeof e!="symbol"?e+"":e,t),t);import{D as h}from"./QueryParams-5e052686.browser.esm-876d788f.js";import{N as w,a as W,A as T,H as b,b as y,I as A,B as i,c as S,d as E,e as p,T as N}from"./index-bf7e6b01.js";import{C as R,a as U,G as k,b as I}from"./contract-appuri-b5a92ae1.browser.esm-91445546.js";import{C as M}from"./contract-interceptor-d7b164a7.browser.esm-9ac16ef5.js";import{C as x,D as F,a as L}from"./contract-owner-62e3d0ab.browser.esm-76db4379.js";import{C as _}from"./contract-platform-fee-e1d5c326.browser.esm-51546132.js";import{C as v}from"./contract-roles-9a1af853.browser.esm-f61d3413.js";import{C as B}from"./contract-sales-d232f5fc.browser.esm-8fb25622.js";import{D}from"./drop-claim-conditions-d8589bc7.browser.esm-089773b7.js";import{S as O}from"./erc-721-standard-e22ed133.browser.esm-7c2a1a93.js";import{E as d}from"./erc-721-67cd0472.browser.esm-1e85d695.js";import{P as G}from"./thirdweb-checkout-45843748.browser.esm-87df6863.js";import"./setErc20Allowance-ef5f1102.browser.esm-8f18e093.js";import"./signature-67894a84.browser.esm-a849935f.js";import"./treeify-3e444e74.js";import"./assertEnabled-61eec3a0.browser.esm-6b870a7e.js";import"./index-e18a6d9c.js";const m=class m extends O{constructor(t,r,a){let n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,l=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new W(t,r,o,n,a);super(C,a,l);s(this,"createBatch",p(async(t,r)=>this.erc721.lazyMint.prepare(t,r)));s(this,"claimTo",p(async(t,r,a)=>this.erc721.claimTo.prepare(t,r,a)));s(this,"claim",p(async(t,r)=>this.erc721.claim.prepare(t,r)));s(this,"burn",p(async t=>this.erc721.burn.prepare(t)));this.abi=T.parse(o||[]),this.metadata=new R(this.contractWrapper,b,this.storage),this.app=new U(this.contractWrapper,this.metadata,this.storage),this.roles=new v(this.contractWrapper,m.contractRoles),this.royalties=new x(this.contractWrapper,this.metadata),this.sales=new B(this.contractWrapper),this.encoder=new y(this.contractWrapper),this.estimator=new k(this.contractWrapper),this.events=new I(this.contractWrapper),this.platformFees=new _(this.contractWrapper),this.interceptor=new M(this.contractWrapper),this.claimConditions=new D(this.contractWrapper,this.metadata,this.storage),this.signature=new d(this.contractWrapper,this.storage),this.revealer=new F(this.contractWrapper,this.storage,A.name,()=>this.erc721.nextTokenIdToMint()),this.signature=new d(this.contractWrapper,this.storage),this.owner=new L(this.contractWrapper),this.checkout=new G(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async totalSupply(){const[t,r]=await Promise.all([this.totalClaimedSupply(),this.totalUnclaimedSupply()]);return t.add(r)}async getAllClaimed(t){const r=i.from((t==null?void 0:t.start)||0).toNumber(),a=i.from((t==null?void 0:t.count)||h).toNumber(),n=Math.min((await this.totalClaimedSupply()).toNumber(),r+a);return await Promise.all(Array.from(Array(n).keys()).map(o=>this.get(o.toString())))}async getAllUnclaimed(t){const r=i.from((t==null?void 0:t.start)||0).toNumber(),a=i.from((t==null?void 0:t.count)||h).toNumber(),n=i.from(Math.max((await this.totalClaimedSupply()).toNumber(),r)),o=i.from(Math.min((await this.contractWrapper.read("nextTokenIdToMint",[])).toNumber(),n.toNumber()+a));return await Promise.all(Array.from(Array(o.sub(n).toNumber()).keys()).map(l=>this.erc721.getTokenMetadata(n.add(l).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[S("transfer"),E])}async getClaimTransaction(t,r,a){return this.erc721.getClaimTransaction(t,r,a)}async prepare(t,r,a){return N.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}};s(m,"contractRoles",w);let u=m;export{u as SignatureDrop};
